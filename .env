REACT_APP_CHAT_ENGINE_PROJECT_ID=8e573caa-7790-4118-8822-cf2faaf501a5

// import { useState } from "react";
// import axios from "axios";
// import './authPage.css';

// const AuthPage = (props) => {
//   const [username, setUsername] = useState("");
//   const [secret, setSecret] = useState("");
//   const [email, setEmail] = useState("");
//   const [first_name, setFirstName] = useState("");
//   const [last_name, setLastName] = useState("");
//   const [isLoading, setLoading] = useState(false);
//   const [error, setError] = useState("");

//   const onLogin = async (e) => {
//     e.preventDefault();
//     try {
//       setLoading(true);
//       const response = await axios.post("https://chatvibe-springboot-server.onrender.com/login", {
//         username,
//         secret
//       });
//       const { data } = response;
//       props.onAuth({ ...data, secret }); // NOTE: override secret
//     } catch (error) {
//       setError(error.response?.data ?? "An error occurred during login.");
//     } finally {
//       setLoading(false);
//     }
//   };

//   const onSignup = async (e) => {
//     e.preventDefault();
//     try {
//       setLoading(true);
//       const response = await axios.post("https://chatvibe-springboot-server.onrender.com/signup", {
//         username,
//         secret,
//         email,
//         first_name,
//         last_name
//       });
//       const { data } = response;
//       props.onAuth({ ...data, secret }); // NOTE: override secret
//     } catch (error) {
//       setError(error.response?.data ?? "An error occurred during signup.");
//     } finally {
//       setLoading(false);
//     }
//   };

//   return (
//     <div className="login-page">
//       <div className="card">
//         {/* Login Form */}
//         <form onSubmit={onLogin}>
//           <div className="title">Login</div>
//           <input
//             type="text"
//             name="username"
//             placeholder="Username"
//             value={username}
//             onChange={(e) => setUsername(e.target.value)}
//           />
//           <input
//             type="password"
//             name="secret"
//             placeholder="Password"
//             value={secret}
//             onChange={(e) => setSecret(e.target.value)}
//           />
//           <button type="submit" disabled={isLoading}>
//             {isLoading ? "Logging in..." : "LOG IN"}
//           </button>
//           {error && <p className="error-message">{error}</p>}
//         </form>

//         {/* Sign Up Form */}
//         <form onSubmit={onSignup}>
//           <div className="title">or Sign Up</div>
//           <input
//             type="text"
//             name="username"
//             placeholder="Username"
//             value={username}
//             onChange={(e) => setUsername(e.target.value)}
//           />
//           <input
//             type="password"
//             name="secret"
//             placeholder="Password"
//             value={secret}
//             onChange={(e) => setSecret(e.target.value)}
//           />
//           <input
//             type="text"
//             name="email"
//             placeholder="Email"
//             value={email}
//             onChange={(e) => setEmail(e.target.value)}
//           />
//           <input
//             type="text"
//             name="first_name"
//             placeholder="First name"
//             value={first_name}
//             onChange={(e) => setFirstName(e.target.value)}
//           />
//           <input
//             type="text"
//             name="last_name"
//             placeholder="Last name"
//             value={last_name}
//             onChange={(e) => setLastName(e.target.value)}
//           />
//           <button type="submit" disabled={isLoading}>
//             {isLoading ? "Signing up..." : "SIGN UP"}
//           </button>
//           {error && <p className="error-message">{error}</p>}
//         </form>
//       </div>
//     </div>
//   );
// };

// export default AuthPage;
